// Code generated by MockGen. DO NOT EDIT.
// Source: parent_block_hash_processor.go
//
// Generated by this command:
//
//	mockgen -source parent_block_hash_processor.go -destination mocks/parent_block_hash_processor_mock.go -package mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	common "github.com/ethereum/go-ethereum/common"
	vm "github.com/ethereum/go-ethereum/core/vm"
	gomock "go.uber.org/mock/gomock"
)

// MockiEvmProcessor is a mock of iEvmProcessor interface.
type MockiEvmProcessor struct {
	ctrl     *gomock.Controller
	recorder *MockiEvmProcessorMockRecorder
	isgomock struct{}
}

// MockiEvmProcessorMockRecorder is the mock recorder for MockiEvmProcessor.
type MockiEvmProcessorMockRecorder struct {
	mock *MockiEvmProcessor
}

// NewMockiEvmProcessor creates a new mock instance.
func NewMockiEvmProcessor(ctrl *gomock.Controller) *MockiEvmProcessor {
	mock := &MockiEvmProcessor{ctrl: ctrl}
	mock.recorder = &MockiEvmProcessorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockiEvmProcessor) EXPECT() *MockiEvmProcessorMockRecorder {
	return m.recorder
}

// ProcessParentBlockHash mocks base method.
func (m *MockiEvmProcessor) ProcessParentBlockHash(prevHash common.Hash, evm *vm.EVM) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "ProcessParentBlockHash", prevHash, evm)
}

// ProcessParentBlockHash indicates an expected call of ProcessParentBlockHash.
func (mr *MockiEvmProcessorMockRecorder) ProcessParentBlockHash(prevHash, evm any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProcessParentBlockHash", reflect.TypeOf((*MockiEvmProcessor)(nil).ProcessParentBlockHash), prevHash, evm)
}
